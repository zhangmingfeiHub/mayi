<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.chinaredstar.product</groupId>
	<artifactId>f-zebra-print-client</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Java EE 7 -->
		<javaee.api.version>7.0</javaee.api.version>
		<start-class>com.zebra.print.Application</start-class>
		<maven.test.skip>true</maven.test.skip>
	</properties>
	<profiles>
		<profile>
			<id>jdk17</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<jdk>1.7</jdk>
			</activation>
			<properties>
				<maven.compiler.source>1.7</maven.compiler.source>
				<maven.compiler.target>1.7</maven.compiler.target>
				<maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>
			</properties>
		</profile>
	</profiles>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.2.1</version>
			<exclusions>
				<exclusion>
					<artifactId>olap4j</artifactId>
					<groupId>org.olap4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>itext</artifactId>
					<groupId>com.lowagie</groupId>
				</exclusion>
				<exclusion>
					<artifactId>lucene-core</artifactId>
					<groupId>org.apache.lucene</groupId>
				</exclusion>
				<exclusion>
					<artifactId>lucene-analyzers-common</artifactId>
					<groupId>org.apache.lucene</groupId>
				</exclusion>
				<exclusion>
					<artifactId>lucene-queryparser</artifactId>
					<groupId>org.apache.lucene</groupId>
				</exclusion>
				<exclusion>
					<artifactId>castor-xml</artifactId>
					<groupId>org.codehaus.castor</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jfreechart</artifactId>
					<groupId>org.jfree</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-annotations</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-core</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-databind</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.zxing/core -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>3.2.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.11</version>
        </dependency>
	</dependencies>

	<build>
		<defaultGoal>package</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/config/</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>jre</directory>
				<targetPath>${project.build.directory}</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
					</archive>
					<excludes>
						<exclude>/*.xml</exclude>
						<exclude>/*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.10</version>
				<configuration>
					<!--lib下直接存放jar，没有路径文件夹（如com/apache)，如果没有这个选项则放在lib下的jar包会被com/apache类似的多层文件夹包裹起来-->
					<!-- lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录 --> 
					<repositoryLayout>flat</repositoryLayout>
					
					<!-- 打包的jar，以及maven依赖的jar放到这个目录里面 -->
					<repositoryName>lib</repositoryName>
					
					<!-- 配置文件的目标目录 -->
					<configurationDirectory>conf</configurationDirectory>
					<!-- 拷贝配置文件到上面的目录中 -->
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<!-- 从哪里拷贝配置文件 (默认src/main/config) -->
					<configurationSourceDirectory>src/main/resources/config/${env}</configurationSourceDirectory>
					<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
					<target>${project.build.directory}</target>
					<daemons>
						<daemon>
							<id>print</id>
							<mainClass>com.zebra.print.Application</mainClass>
							<platforms>
								<platform>jsw</platform>
							</platforms>
							<wrapperLogFile>logs/print.log</wrapperLogFile>
							<generatorConfigurations>
								<generatorConfiguration>
									<generator>jsw</generator>
									<includes>
										<include>windows-x86-32</include>
										<include>windows-x86-64</include>
									</includes>
									<configuration>
										<property>
											<name>configuration.directory.in.classpath.first</name>
											<value>conf</value>
										</property>
										<property>
											<name>set.default.REPO_DIR</name>
											<value>lib</value>
										</property>
										<!-- 指定jre目录，自带jre，客户机可不安装jre环境 -->
										<property>
											<name>wrapper.java.command</name>
											<value>jre/bin/java</value>
										</property>
										<property>
											<name>wrapper.ping.timeout</name>
											<value>300</value>
										</property>
										<property>
											<name>wrapper.startup.timeout</name>
											<value>300</value>
										</property>
										<!-- 配置服务随开机自启动 -->
										<property>
											<name> wrapper.ntservice.starttype</name>
											<value>AUTO_START</value>
										</property>
										<!-- 指定java.io.tmpdir，否则在win7及以上系统，默认使用管理员帐号SYSTEM时，
											目录会切换到C:\windows\system32目录下由于没有权限写入导致服务启动失败,
											因此指定根目录，默认C: -->
										<property>
											<name>wrapper.java.additional.2</name>
											<value>-Djava.io.tmpdir=c:/temp</value>
										</property>
									</configuration>
								</generatorConfiguration>
							</generatorConfigurations>
							<jvmSettings>
								<initialMemorySize>128M</initialMemorySize>
								<maxMemorySize>256M</maxMemorySize>
								<extraArguments>
									<extraArgument>-server</extraArgument>
								</extraArguments>
							</jvmSettings>
						</daemon>
					</daemons>
				</configuration>
				<executions>
					<execution>
						<id>generate-jsw-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>generate-daemons</goal>
							<goal>create-repository</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptor>assembly/bin.xml</descriptor>
					<outputDirectory>${project.parent.build.directory}</outputDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<finalName>zebra-print</finalName>
	</build>
	
</project>
