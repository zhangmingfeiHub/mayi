#配置根Logger([ level ]   ,  appenderName1 ,  appenderName2...)
log4j.rootLogger=DEBUG, C,D,E

log4j.appender.C=org.apache.log4j.ConsoleAppender
# 采用默认的配置SYSTEM_OUT 指定输出控制台
#log4j.appender.C.target=
# 采用默认的配置true 意谓着所有的消息都会被立即输出
#log4j.appender.C.immediateFlush=
# 指定日志消息的输出最低层次
log4j.appender.C.threshold=DEBUG
log4j.appender.C.Encoding=UTF-8
log4j.appender.C.layout = org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern=[%c] - %m%n


# 1.org.apache.log4j.ConsoleAppender（控制台）
# 2.org.apache.log4j.FileAppender（文件）
# 3.org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
# 4.org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
# 5.org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.D=org.apache.log4j.RollingFileAppender
log4j.appender.D.threshold=DEBUG
log4j.appender.D.Encoding=UTF-8
#log4j.appender.D.immediateFlush=true
log4j.appender.D.file=E:/logs/mayi.log
#log4j.appender.D.append=true
log4j.appender.D.maxFileSize=10
# 指定可以产生的滚动文件的最大数
log4j.appender.D.maxBackupIndex=2
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n

log4j.appender.E=org.apache.log4j.RollingFileAppender
log4j.appender.E.threshold=ERROR
log4j.appender.E.Encoding=UTF-8
#log4j.appender.E.immediateFlush=true
log4j.appender.E.file=E:/logs/mayi-error.log
#log4j.appender.E.append=true
log4j.appender.E.maxFileSize=10
# 指定可以产生的滚动文件的最大数
log4j.appender.E.maxBackupIndex=2
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n

